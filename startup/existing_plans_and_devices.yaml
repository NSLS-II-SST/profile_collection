# This file is automatically generated. Edit at your own risk.
existing_devices:
  BeamStopS:
    classname: PrettyMotorFMBO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: SST.Base.motors
  BeamStopW:
    classname: PrettyMotorFMBO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: SST.Base.motors
  Beamstop_SAXS:
    classname: EpicsSignalRO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  Beamstop_WAXS:
    classname: EpicsSignalRO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  DM4_PD:
    classname: EpicsSignalRO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  DetS_cam:
    classname: StandardProsilica
    is_flyable: false
    is_movable: false
    is_readable: true
    module: SST.Base.cameras
  Det_S:
    classname: SynAxis
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.sim
  Det_W:
    classname: PrettyMotorFMBO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: SST.Base.motors
  Device:
    classname: type
    is_flyable: false
    is_movable: false
    is_readable: true
    module: builtins
  DiodeRange:
    classname: EpicsSignal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  EPS_Shutter:
    classname: type
    is_flyable: false
    is_movable: false
    is_readable: true
    module: builtins
  EnPos:
    classname: type
    is_flyable: false
    is_movable: true
    is_readable: true
    module: builtins
  EnSimEPUPos:
    classname: type
    is_flyable: false
    is_movable: true
    is_readable: true
    module: builtins
  EpicsMotor:
    classname: type
    is_flyable: false
    is_movable: true
    is_readable: true
    module: builtins
  EpicsSignal:
    classname: type
    is_flyable: false
    is_movable: true
    is_readable: true
    module: builtins
  EpicsSignalRO:
    classname: type
    is_flyable: false
    is_movable: true
    is_readable: true
    module: builtins
  EpuMode:
    classname: type
    is_flyable: false
    is_movable: true
    is_readable: true
    module: builtins
  Exit_Slit:
    classname: PrettyMotorFMBO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: SST.Base.motors
  FMBHexapodMirror:
    classname: type
    is_flyable: false
    is_movable: false
    is_readable: true
    module: builtins
  FMBHexapodMirrorAxisStandAlonePitch:
    classname: type
    is_flyable: false
    is_movable: true
    is_readable: true
    module: builtins
  FMB_Mono_Grating_Type:
    classname: type
    is_flyable: false
    is_movable: true
    is_readable: true
    module: builtins
  HexapodMirror:
    classname: type
    is_flyable: false
    is_movable: false
    is_readable: true
    module: builtins
  Izero_Diode:
    classname: EpicsSignalRO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  Izero_Mesh:
    classname: EpicsSignalRO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  Izero_Y:
    classname: PrettyMotorFMBO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: SST.Base.motors
  Izero_cam:
    classname: StandardProsilica
    is_flyable: false
    is_movable: false
    is_readable: true
    module: SST.Base.cameras
  Izero_ds:
    classname: PrettyMotorFMBO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: SST.Base.motors
  Light_control:
    classname: EpicsSignal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  Mono_Scan_Speed_ev:
    classname: EpicsSignal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  Mono_Scan_Start:
    classname: EpicsSignal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  Mono_Scan_Start_ev:
    classname: EpicsSignal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  Mono_Scan_Stop:
    classname: EpicsSignal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  Mono_Scan_Stop_ev:
    classname: EpicsSignal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  Monochromator:
    classname: type
    is_flyable: false
    is_movable: true
    is_readable: true
    module: builtins
  PVPositioner:
    classname: type
    is_flyable: false
    is_movable: true
    is_readable: true
    module: builtins
  PVPositionerPC:
    classname: type
    is_flyable: false
    is_movable: true
    is_readable: true
    module: builtins
  PrettyMotor:
    classname: type
    is_flyable: false
    is_movable: true
    is_readable: true
    module: builtins
  PrettyMotorFMBO:
    classname: type
    is_flyable: false
    is_movable: true
    is_readable: true
    module: builtins
  PseudoPositioner:
    classname: type
    is_flyable: false
    is_movable: true
    is_readable: true
    module: builtins
  PseudoSingle:
    classname: type
    is_flyable: false
    is_movable: true
    is_readable: true
    module: builtins
  RSOXSGreatEyesDetector:
    classname: type
    is_flyable: false
    is_movable: false
    is_readable: true
    module: builtins
  SP:
    classname: Syringe_Pump
    is_flyable: false
    is_movable: false
    is_readable: true
    module: rsoxs.Base.syringepump
  SampleViewer_cam:
    classname: StandardProsilicaWithTIFFV33
    is_flyable: false
    is_movable: false
    is_readable: true
    module: SST.Base.cameras
  Sample_TEY:
    classname: EpicsSignalRO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  Sample_cam:
    classname: StandardProsilica
    is_flyable: false
    is_movable: false
    is_readable: true
    module: SST.Base.cameras
  ShutterSet:
    classname: type
    is_flyable: false
    is_movable: true
    is_readable: true
    module: builtins
  Shutter_Y:
    classname: PrettyMotorFMBO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: SST.Base.motors
  Shutter_control:
    classname: EpicsSignal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  Shutter_delay:
    classname: EpicsSignal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  Shutter_enable:
    classname: EpicsSignal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  Shutter_enable1:
    classname: EpicsSignal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  Shutter_enable2:
    classname: EpicsSignal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  Shutter_enable3:
    classname: EpicsSignal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  Shutter_open_time:
    classname: EpicsSignal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  Shutter_trigger:
    classname: EpicsSignal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  Side_cam:
    classname: StandardProsilica
    is_flyable: false
    is_movable: false
    is_readable: true
    module: SST.Base.cameras
  Signal:
    classname: type
    is_flyable: false
    is_movable: true
    is_readable: true
    module: builtins
  SimGreatEyes:
    classname: type
    is_flyable: false
    is_movable: false
    is_readable: true
    module: builtins
  Slit1_Current_Bottom:
    classname: EpicsSignalRO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  Slit1_Current_Inboard:
    classname: EpicsSignalRO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  Slit1_Current_Outboard:
    classname: EpicsSignalRO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  Slit1_Current_Top:
    classname: EpicsSignalRO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  Slits:
    classname: type
    is_flyable: false
    is_movable: true
    is_readable: true
    module: builtins
  StandardProsilica:
    classname: type
    is_flyable: false
    is_movable: false
    is_readable: true
    module: builtins
  StandardProsilicaWithTIFFV33:
    classname: type
    is_flyable: false
    is_movable: false
    is_readable: true
    module: builtins
  Syringe_Pump:
    classname: type
    is_flyable: false
    is_movable: false
    is_readable: true
    module: builtins
  TEMX:
    classname: PrettyMotor
    is_flyable: false
    is_movable: true
    is_readable: true
    module: SST.Base.motors
  TEMY:
    classname: PrettyMotor
    is_flyable: false
    is_movable: true
    is_readable: true
    module: SST.Base.motors
  TEMZ:
    classname: PrettyMotor
    is_flyable: false
    is_movable: true
    is_readable: true
    module: SST.Base.motors
  UndulatorMotor:
    classname: type
    is_flyable: false
    is_movable: true
    is_readable: true
    module: builtins
  bpm13_sum:
    classname: EpicsSignalRO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  camera:
    classname: StandardProsilica
    is_flyable: false
    is_movable: false
    is_readable: true
    module: SST.Base.cameras
  crosshair:
    classname: Overlay
    is_flyable: false
    is_movable: false
    is_readable: true
    module: ophyd.areadetector.plugins
  crosshair_saxs:
    classname: Overlay
    is_flyable: false
    is_movable: false
    is_readable: true
    module: ophyd.areadetector.plugins
  crosshair_side:
    classname: Overlay
    is_flyable: false
    is_movable: false
    is_readable: true
    module: ophyd.areadetector.plugins
  en:
    classname: EnSimEPUPos
    is_flyable: false
    is_movable: true
    is_readable: true
    module: SST.HW.energy
  grating:
    classname: PrettyMotorFMBO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: SST.Base.motors
  gratingx:
    classname: PrettyMotorFMBO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: SST.Base.motors
  gv14:
    classname: EPS_Shutter
    is_flyable: false
    is_movable: false
    is_readable: true
    module: SST.Base.valves_and_shutters
  gv14a:
    classname: EPS_Shutter
    is_flyable: false
    is_movable: false
    is_readable: true
    module: SST.Base.valves_and_shutters
  gv15:
    classname: EPS_Shutter
    is_flyable: false
    is_movable: false
    is_readable: true
    module: SST.Base.valves_and_shutters
  gv26:
    classname: EPS_Shutter
    is_flyable: false
    is_movable: false
    is_readable: true
    module: SST.Base.valves_and_shutters
  gv27:
    classname: EPS_Shutter
    is_flyable: false
    is_movable: false
    is_readable: true
    module: SST.Base.valves_and_shutters
  gv27a:
    classname: EPS_Shutter
    is_flyable: false
    is_movable: false
    is_readable: true
    module: SST.Base.valves_and_shutters
  gv28:
    classname: EPS_Shutter
    is_flyable: false
    is_movable: false
    is_readable: true
    module: SST.Base.valves_and_shutters
  gvTEM:
    classname: EPS_Shutter
    is_flyable: false
    is_movable: false
    is_readable: true
    module: SST.Base.valves_and_shutters
  gvll:
    classname: EPS_Shutter
    is_flyable: false
    is_movable: false
    is_readable: true
    module: SST.Base.valves_and_shutters
  gvturbo:
    classname: EPS_Shutter
    is_flyable: false
    is_movable: false
    is_readable: true
    module: SST.Base.valves_and_shutters
  mir1:
    classname: FMBHexapodMirror
    is_flyable: false
    is_movable: false
    is_readable: true
    module: SST.Base.mirrors
  mir1OLD:
    classname: HexapodMirror
    is_flyable: false
    is_movable: false
    is_readable: true
    module: SST.Base.mirrors
  mir1_pressure:
    classname: EpicsSignalRO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  mir2_type:
    classname: EpicsSignal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  mir3:
    classname: FMBHexapodMirror
    is_flyable: false
    is_movable: false
    is_readable: true
    module: SST.Base.mirrors
  mir3OLD:
    classname: HexapodMirror
    is_flyable: false
    is_movable: false
    is_readable: true
    module: SST.Base.mirrors
  mir4:
    classname: FMBHexapodMirror
    is_flyable: false
    is_movable: false
    is_readable: true
    module: SST.Base.mirrors
  mir4OLD:
    classname: HexapodMirror
    is_flyable: false
    is_movable: false
    is_readable: true
    module: SST.Base.mirrors
  mirror2:
    classname: PrettyMotorFMBO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: SST.Base.motors
  mirror2x:
    classname: PrettyMotorFMBO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: SST.Base.motors
  mono_en:
    classname: Monochromator
    is_flyable: false
    is_movable: true
    is_readable: true
    module: SST.HW.energy
  motor1:
    classname: SynAxis
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.sim
  psh1:
    classname: EPS_Shutter
    is_flyable: false
    is_movable: false
    is_readable: true
    module: SST.Base.valves_and_shutters
  psh10:
    classname: EPS_Shutter
    is_flyable: false
    is_movable: false
    is_readable: true
    module: SST.Base.valves_and_shutters
  psh4:
    classname: EPS_Shutter
    is_flyable: false
    is_movable: false
    is_readable: true
    module: SST.Base.valves_and_shutters
  psh7:
    classname: EPS_Shutter
    is_flyable: false
    is_movable: false
    is_readable: true
    module: SST.Base.valves_and_shutters
  ring_current:
    classname: EpicsSignalRO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  rsoxs_ccg_izero:
    classname: EpicsSignalRO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  rsoxs_ccg_ll:
    classname: EpicsSignalRO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  rsoxs_ccg_main:
    classname: EpicsSignalRO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  rsoxs_ll_gpwr:
    classname: EpicsSignal
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  rsoxs_pg_izero:
    classname: EpicsSignalRO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  rsoxs_pg_ll:
    classname: EpicsSignalRO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  rsoxs_pg_main:
    classname: EpicsSignalRO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: ophyd.signal
  sam_Th:
    classname: PrettyMotorFMBO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: SST.Base.motors
  sam_X:
    classname: PrettyMotorFMBO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: SST.Base.motors
  sam_Y:
    classname: PrettyMotorFMBO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: SST.Base.motors
  sam_Z:
    classname: PrettyMotorFMBO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: SST.Base.motors
  sam_viewer:
    classname: PrettyMotorFMBO
    is_flyable: false
    is_movable: true
    is_readable: true
    module: SST.Base.motors
  saxs_det:
    classname: SimGreatEyes
    is_flyable: false
    is_movable: false
    is_readable: true
    module: rsoxs.Base.detectors
  shutter_open_set:
    classname: ShutterSet
    is_flyable: false
    is_movable: true
    is_readable: true
    module: SST.HW.diode
  slits1:
    classname: Slits
    is_flyable: false
    is_movable: true
    is_readable: true
    module: SST.Base.slits
  slits2:
    classname: Slits
    is_flyable: false
    is_movable: true
    is_readable: true
    module: SST.Base.slits
  slits3:
    classname: Slits
    is_flyable: false
    is_movable: true
    is_readable: true
    module: SST.Base.slits
  stats_plugin:
    classname: StatsPlugin
    is_flyable: false
    is_movable: false
    is_readable: true
    module: ophyd.areadetector.plugins
  waxs_det:
    classname: RSOXSGreatEyesDetector
    is_flyable: false
    is_movable: false
    is_readable: true
    module: rsoxs.Base.detectors
existing_plans:
  BS_out:
    module: rsoxs.Functions.configurations
    name: BS_out
    parameters: []
    properties:
      is_generator: true
  BSs_in:
    module: rsoxs.Functions.configurations
    name: BSs_in
    parameters: []
    properties:
      is_generator: true
  BSs_out:
    module: rsoxs.Functions.configurations
    name: BSs_out
    parameters: []
    properties:
      is_generator: true
  BSw_in:
    module: rsoxs.Functions.configurations
    name: BSw_in
    parameters: []
    properties:
      is_generator: true
  BSw_out:
    module: rsoxs.Functions.configurations
    name: BSw_out
    parameters: []
    properties:
      is_generator: true
  DetS_edge:
    module: rsoxs.Functions.configurations
    name: DetS_edge
    parameters: []
    properties:
      is_generator: true
  DetS_in:
    module: rsoxs.Functions.configurations
    name: DetS_in
    parameters: []
    properties:
      is_generator: true
  DetS_out:
    module: rsoxs.Functions.configurations
    name: DetS_out
    parameters: []
    properties:
      is_generator: true
  DetW_edge:
    module: rsoxs.Functions.configurations
    name: DetW_edge
    parameters: []
    properties:
      is_generator: true
  DetW_in:
    module: rsoxs.Functions.configurations
    name: DetW_in
    parameters: []
    properties:
      is_generator: true
  DetW_out:
    module: rsoxs.Functions.configurations
    name: DetW_out
    parameters: []
    properties:
      is_generator: true
  Detectors_edge:
    module: rsoxs.Functions.configurations
    name: Detectors_edge
    parameters: []
    properties:
      is_generator: true
  Detectors_out:
    module: rsoxs.Functions.configurations
    name: Detectors_out
    parameters: []
    properties:
      is_generator: true
  Izero_diode:
    module: rsoxs.Functions.configurations
    name: Izero_diode
    parameters: []
    properties:
      is_generator: true
  Izero_mesh:
    module: rsoxs.Functions.configurations
    name: Izero_mesh
    parameters: []
    properties:
      is_generator: true
  Izero_out:
    module: rsoxs.Functions.configurations
    name: Izero_out
    parameters: []
    properties:
      is_generator: true
  Izero_screen:
    module: rsoxs.Functions.configurations
    name: Izero_screen
    parameters: []
    properties:
      is_generator: true
  NEXAFS_fly_scan_core:
    module: rsoxs.Functions.energyscancore
    name: NEXAFS_fly_scan_core
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: scan_params
    - default: 'False'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: openshutter
    - default: '0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: pol
    - default: '''best'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: 'True'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: locked
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: 'False'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: sim_mode
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  NEXAFS_scan_core:
    module: rsoxs.Functions.energyscancore
    name: NEXAFS_scan_core
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: signals
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: dets
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: energy
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: energies
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: 'False'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: openshutter
    - default: 'False'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: open_each_step
    - default: 'True'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: lockscan
    - default: '0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: pol
    - default: '1'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: exp_time
    - default: '''no change'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: '''None'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: motorname
    - default: '0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: offset
    - default: 'False'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: sim_mode
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  SAXSmode:
    module: rsoxs.Functions.configurations
    name: SAXSmode
    parameters: []
    properties:
      is_generator: true
  Scan_izero_peak:
    module: rsoxs.Functions.common_procedures
    name: Scan_izero_peak
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: startingen
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: widfract
    properties:
      is_generator: true
  Shutter_in:
    module: rsoxs.Functions.configurations
    name: Shutter_in
    parameters: []
    properties:
      is_generator: true
  Shutter_out:
    module: rsoxs.Functions.configurations
    name: Shutter_out
    parameters: []
    properties:
      is_generator: true
  WAXSmode:
    module: rsoxs.Functions.configurations
    name: WAXSmode
    parameters: []
    properties:
      is_generator: true
  abs_set:
    description: Set a value. Optionally, wait for it to complete before continuing.
    module: bluesky.plan_stubs
    name: abs_set
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: obj
    - description: passed to obj.set()
      kind:
        name: VAR_POSITIONAL
        value: 2
      name: args
    - default: None
      description: identifier used by 'wait'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group
    - default: 'False'
      description: 'If True, wait for completion before processing any more messages.

        False by default.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: wait
    - description: passed to obj.set()
      kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  all_out:
    module: rsoxs.Functions.configurations
    name: all_out
    parameters: []
    properties:
      is_generator: true
  base_grating_to_1200:
    module: SST.HW.energy
    name: base_grating_to_1200
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: mono_en
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: en
    properties:
      is_generator: true
  base_grating_to_250:
    module: SST.HW.energy
    name: base_grating_to_250
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: mono_en
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: en
    properties:
      is_generator: true
  base_set_polarization:
    module: SST.HW.energy
    name: base_set_polarization
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: pol
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: en
    properties:
      is_generator: true
  beamdown_notice:
    module: rsoxs.Functions.contingencies
    name: beamdown_notice
    parameters: []
    properties:
      is_generator: true
  beamup_notice:
    module: rsoxs.Functions.contingencies
    name: beamup_notice
    parameters: []
    properties:
      is_generator: true
  buildeputable:
    module: rsoxs.Functions.common_procedures
    name: buildeputable
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: start
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: stop
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: step
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: widfract
    - default: '14000'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: startinggap
    - default: '0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: phase
    - default: '''L'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: mode
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grat
    - default: '''test'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: name
    properties:
      is_generator: true
  buildeputablegaps:
    module: rsoxs.Functions.common_procedures
    name: buildeputablegaps
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: start
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: stop
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: step
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: widfract
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: startingen
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: name
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: phase
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    properties:
      is_generator: true
  cdsaxs_scan:
    description: 'custom_rsoxs_scan

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param energies: list of touples of energy, exposure time

      @param angles: list of angles.  at each angle, the energy list will be collected

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: cdsaxs_scan
    parameters:
    - default: '[(250, 2), (270, 2), (280, 2), (285, 2), (300, 2)]'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: energies
    - default: (-60, 61, 2)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: angles
    - default: '''cdsaxs_scan'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '8.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''cdsaxs_scan'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  checkpoint:
    description: If interrupted, rewind to this point.
    module: bluesky.plan_stubs
    name: checkpoint
    parameters: []
    properties:
      is_generator: true
  count:
    description: Take one or more readings from detectors.
    module: bluesky.plans
    name: count
    parameters:
    - description: list of 'readable' objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - default: '1'
      description: 'number of readings to take; default is 1


        If None, capture data until canceled'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: num
    - default: None
      description: Time delay in seconds between successive readings; default is 0.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: delay
    - default: None
      description: "hook for customizing action of inner loop (messages per step)\n\
        Expected signature ::\n\n   def f(detectors: Iterable[OphydObj]) -> Generator[Msg]:\n\
        \       ..."
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: per_shot
    - default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  create:
    description: Bundle future readings into a new Event document.
    module: bluesky.plan_stubs
    name: create
    parameters:
    - default: '''primary'''
      description: 'name given to event stream, used to convenient identification

        default is ''primary'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: name
    properties:
      is_generator: true
  custom_rsoxs_scan:
    description: 'custom_rsoxs_scan

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: custom_rsoxs_scan
    parameters:
    - default: '[((270, 340, 1.0), 2.0)]'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: energies
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '8.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''custom_rsoxs_scan'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  dark_plan_saxs:
    module: rsoxs.HW.detectors
    name: dark_plan_saxs
    parameters: []
    properties:
      is_generator: true
  dark_plan_waxs:
    module: rsoxs.HW.detectors
    name: dark_plan_waxs
    parameters: []
    properties:
      is_generator: true
  do_2020_eputables:
    module: rsoxs.Functions.common_procedures
    name: do_2020_eputables
    parameters: []
    properties:
      is_generator: true
  do_2021_eputables3:
    module: rsoxs.Functions.common_procedures
    name: do_2021_eputables3
    parameters: []
    properties:
      is_generator: true
  do_HOPGscans_epu:
    module: rsoxs.Functions.NEXAFSscans
    name: do_HOPGscans_epu
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: hopggrazing
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: hopgnormal
    properties:
      is_generator: true
  do_acquisitions:
    module: rsoxs.Functions.acquisitions
    name: do_acquisitions
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: acq_list
    properties:
      is_generator: true
  do_some_eputables_2021_en:
    module: rsoxs.Functions.common_procedures
    name: do_some_eputables_2021_en
    parameters: []
    properties:
      is_generator: true
  en_scan_core:
    module: rsoxs.Functions.energyscancore
    name: en_scan_core
    parameters:
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: signals
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: dets
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: energy
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: energies
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: times
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - default: 'True'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: lockscan
    - default: '0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: pol
    - default: '''no change'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: angle
    - default: 'False'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: sim_mode
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  enc_clr_gx:
    module: rsoxs.Functions.contingencies
    name: enc_clr_gx
    parameters: []
    properties:
      is_generator: true
  enc_clr_x:
    module: rsoxs.Functions.contingencies
    name: enc_clr_x
    parameters: []
    properties:
      is_generator: true
  find_fiducials:
    module: rsoxs.Functions.alignment
    name: find_fiducials
    parameters:
    - default: '[6, 3.5, -3, 1.1]'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: f2
    properties:
      is_generator: true
  fixed_pol_rotate_sample_nexafs:
    description: At fixed polarization, rotate the sample to do a traditional angle
      dependant NEXAFS measurement
    module: rsoxs.Functions.NEXAFSscans
    name: fixed_pol_rotate_sample_nexafs
    parameters:
    - default: '''fly_Carbon_NEXAFS'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: nexafs_plan
    - default: '[20, 40, 55, 70, 90]'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: angles
    - default: '0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: polarization
    - default: '''fixed_pol_rotate_sample_nexafs'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''fixed_pol_rotate_sample_nexafs'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  fixed_sample_rotate_pol_list_nexafs:
    description: 'At fixed incident angle, rotate the polarization angle of the X-rays
      and take NEXAFS at each step

      polarization is calculated relative to the sample normal

      angles less than the grazing angle are not allowed and are ignored'
    module: rsoxs.Functions.NEXAFSscans
    name: fixed_sample_rotate_pol_list_nexafs
    parameters:
    - default: '''fly_Carbon_NEXAFS'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: nexafs_plan
    - default: '20'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grazing_angle
    - default: '''fixed_sample_rotate_pol_list_nexafs'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '[0, 40, 55, 70, 90]'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: polarizations
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''fixed_sample_rotate_pol_list_nexafs'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  fixed_sample_rotate_pol_nexafs:
    description: 'At fixed incident angle, rotate the polarization angle of the X-rays
      and take NEXAFS at each step

      polarization is calculated relative to the sample normal

      angles less than the grazing angle are not allowed and are ignored'
    module: rsoxs.Functions.NEXAFSscans
    name: fixed_sample_rotate_pol_nexafs
    parameters:
    - default: '''fly_Carbon_NEXAFS'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: nexafs_plan
    - default: '20'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grazing_angle
    - default: '''fixed_sample_rotate_pol_nexafs'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '[20, 40, 55, 70, 90]'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: angles
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''fixed_sample_rotate_pol_nexafs'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  fly_Boron_NEXAFS:
    description: '@param speed: the speed in eV/second to fly the mono

      @param pol: the polarization of the EPU to set before run

      @param diode_range: sets the range of the SAXS and WAXS beamstop DIODEs for
      direct beam measurements

      @param m3_pitch: the pitch of the M3 mirror to use for this energy range

      @param grating: the grating of the mono to use for the scan (currently "1200"
      and "250" are only valid choices)

      @return: perform a flying NEXAFS scan'
    module: rsoxs.Functions.NEXAFSscans
    name: fly_Boron_NEXAFS
    parameters:
    - default: '0.2'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: speed
    - default: '0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: pol
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '8.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''250'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''fly_Boron_NEXAFS'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  fly_Calcium_NEXAFS:
    description: '@param speed: the speed in eV/second to fly the mono

      @param pol: the polarization of the EPU to set before run

      @param diode_range: sets the range of the SAXS and WAXS beamstop DIODEs for
      direct beam measurements

      @param m3_pitch: the pitch of the M3 mirror to use for this energy range

      @param grating: the grating of the mono to use for the scan (currently "1200"
      and "250" are only valid choices)

      @return: perform a flying NEXAFS scan'
    module: rsoxs.Functions.NEXAFSscans
    name: fly_Calcium_NEXAFS
    parameters:
    - default: '0.2'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: speed
    - default: '0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: pol
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '7.99'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''250'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''fly_Calcium_NEXAFS'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  fly_Carbon_NEXAFS:
    description: '@param speed: the speed in eV/second to fly the mono

      @param pol: the polarization of the EPU to set before run

      @param diode_range: sets the range of the SAXS and WAXS beamstop DIODEs for
      direct beam measurements

      @param m3_pitch: the pitch of the M3 mirror to use for this energy range

      @param grating: the grating of the mono to use for the scan (currently "1200"
      and "250" are only valid choices)

      @return: perform a flying NEXAFS scan'
    module: rsoxs.Functions.NEXAFSscans
    name: fly_Carbon_NEXAFS
    parameters:
    - default: '0.2'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: speed
    - default: '0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: pol
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '7.94'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''250'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''fly_Carbon_NEXAFS'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  fly_Fluorine_NEXAFS:
    description: '@param speed: the speed in eV/second to fly the mono

      @param pol: the polarization of the EPU to set before run

      @param diode_range: sets the range of the SAXS and WAXS beamstop DIODEs for
      direct beam measurements

      @param m3_pitch: the pitch of the M3 mirror to use for this energy range

      @param grating: the grating of the mono to use for the scan (currently "1200"
      and "250" are only valid choices)

      @return: perform a flying NEXAFS scan'
    module: rsoxs.Functions.NEXAFSscans
    name: fly_Fluorine_NEXAFS
    parameters:
    - default: '0.4'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: speed
    - default: '0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: pol
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '7.98'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''fly_Fluorine_NEXAFS'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  fly_Nitrogen_NEXAFS:
    description: '@param speed: the speed in eV/second to fly the mono

      @param pol: the polarization of the EPU to set before run

      @param diode_range: sets the range of the SAXS and WAXS beamstop DIODEs for
      direct beam measurements

      @param m3_pitch: the pitch of the M3 mirror to use for this energy range

      @param grating: the grating of the mono to use for the scan (currently "1200"
      and "250" are only valid choices)

      @return: perform a flying NEXAFS scan'
    module: rsoxs.Functions.NEXAFSscans
    name: fly_Nitrogen_NEXAFS
    parameters:
    - default: '0.2'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: speed
    - default: '0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: pol
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '7.96'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''250'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''fly_Nitrogen_NEXAFS'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  fly_Oxygen_NEXAFS:
    description: '@param speed: the speed in eV/second to fly the mono

      @param pol: the polarization of the EPU to set before run

      @param diode_range: sets the range of the SAXS and WAXS beamstop DIODEs for
      direct beam measurements

      @param m3_pitch: the pitch of the M3 mirror to use for this energy range

      @param grating: the grating of the mono to use for the scan (currently "1200"
      and "250" are only valid choices)

      @return: perform a flying NEXAFS scan'
    module: rsoxs.Functions.NEXAFSscans
    name: fly_Oxygen_NEXAFS
    parameters:
    - default: '0.2'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: speed
    - default: '0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: pol
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '7.96'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''250'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''fly_Oxygen_NEXAFS'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  fly_SiliconK_NEXAFS:
    description: '@param speed: the speed in eV/second to fly the mono

      @param pol: the polarization of the EPU to set before run

      @param diode_range: sets the range of the SAXS and WAXS beamstop DIODEs for
      direct beam measurements

      @param m3_pitch: the pitch of the M3 mirror to use for this energy range

      @param grating: the grating of the mono to use for the scan (currently "1200"
      and "250" are only valid choices)

      @return: perform a flying NEXAFS scan'
    module: rsoxs.Functions.NEXAFSscans
    name: fly_SiliconK_NEXAFS
    parameters:
    - default: '0.4'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: speed
    - default: '0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: pol
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '7.97'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''fly_SiliconK_NEXAFS'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  fly_SiliconL_NEXAFS:
    description: '@param speed: the speed in eV/second to fly the mono

      @param pol: the polarization of the EPU to set before run

      @param diode_range: sets the range of the SAXS and WAXS beamstop DIODEs for
      direct beam measurements

      @param m3_pitch: the pitch of the M3 mirror to use for this energy range

      @param grating: the grating of the mono to use for the scan (currently "1200"
      and "250" are only valid choices)

      @return: perform a flying NEXAFS scan'
    module: rsoxs.Functions.NEXAFSscans
    name: fly_SiliconL_NEXAFS
    parameters:
    - default: '0.2'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: speed
    - default: '0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: pol
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '8.01'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''250'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''fly_SiliconL_NEXAFS'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  fly_SulfurL_NEXAFS:
    description: '@param speed: the speed in eV/second to fly the mono

      @param pol: the polarization of the EPU to set before run

      @param diode_range: sets the range of the SAXS and WAXS beamstop DIODEs for
      direct beam measurements

      @param m3_pitch: the pitch of the M3 mirror to use for this energy range

      @param grating: the grating of the mono to use for the scan (currently "1200"
      and "250" are only valid choices)

      @return: perform a flying NEXAFS scan'
    module: rsoxs.Functions.NEXAFSscans
    name: fly_SulfurL_NEXAFS
    parameters:
    - default: '0.2'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: speed
    - default: '0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: pol
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '7.97'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''250'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''fly_SulfurL_NEXAFS'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  fly_scan_eliot:
    description: Specific scan for SST-1 monochromator fly scan, while catching up
      with the undulator
    module: rsoxs.Functions.energyscancore
    name: fly_scan_eliot
    parameters:
    - description: "(start_en : eV to begin the scan,\nstop_en : eV to stop the scan,\n\
        speed_en : eV / second to move the monochromator)\nthe stop energy of each\
        \ tuple should match the start of the next to make a continuous scan\n   \
        \ although this is not strictly enforced to allow for flexibility"
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: scan_params
    - default: '0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: polarization
    - default: '1'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: locked
    - default: '{}'
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  fly_scan_mono_epu:
    description: Specific scan for SST-1 monochromator fly scan, while catching up
      with the undulator
    module: rsoxs.Functions.energyscancore
    name: fly_scan_mono_epu
    parameters:
    - description: "(start_en : eV to begin the scan,\nstop_en : eV to stop the scan,\n\
        speed_en : eV / second to move the monochromator)\nthe stop energy of each\
        \ tuple should match the start of the next to make a continuous scan\n   \
        \ although this is not strictly enforced to allow for flexibility"
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: scan_params
    - default: '0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: polarization
    - default: '''best'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: '{}'
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  focused_carbon_scan_nd:
    description: 'focused_carbon_scan_nd

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: focused_carbon_scan_nd
    parameters:
    - default: '1.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: multiple
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '8.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''focused_carbon_scan_nd'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  full_Carbon_NEXAFS:
    description: 'Full Carbon Scan runs an RSoXS sample set through the carbon edge,
      with particular emphasis in he pre edge region

      typically this is not run anymore as of jan 2021.  fly scans are the preferred
      NEXAFS method

      I''m keeping this here just as a historical record / fallback in case flying
      stops working'
    module: rsoxs.Functions.NEXAFSscans
    name: full_Carbon_NEXAFS
    parameters:
    - default: '[]'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: sigs
    - default: '0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: pol
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '7.98'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: 'True'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: open_each_step
    - default: '1'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: exp_time
    - default: '''no change'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: '''None'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: motorname
    - default: '0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: offset
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''full_Carbon_NEXAFS'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  full_ca_scan_nd:
    description: 'full_ca_scan_nd

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: full_ca_scan_nd
    parameters:
    - default: '1.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: multiple
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '8.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''full_ca_scan_nd'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  full_carbon_calcium_scan_nd:
    description: 'full_carbon_calcium_scan_nd

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: full_carbon_calcium_scan_nd
    parameters:
    - default: '1.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: multiple
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '8.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''full_carbon_calcium_scan_nd'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  full_carbon_scan_nd:
    description: 'full_carbon_scan_nd

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: full_carbon_scan_nd
    parameters:
    - default: '1.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: multiple
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '8.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''full_carbon_scan_nd'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  full_carbon_scan_nonaromatic:
    description: 'full_carbon_scan_nonaromatic

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: full_carbon_scan_nonaromatic
    parameters:
    - default: '1.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: multiple
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '8.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''full_carbon_scan_nonaromatic'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  full_fluorine_scan_nd:
    description: 'full_fluorine_scan_nd

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: full_fluorine_scan_nd
    parameters:
    - default: '1.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: multiple
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '7.89'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''full_fluorine_scan_nd'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  full_nitrogen_scan_nd:
    description: 'full_nitrogen_scan_nd

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: full_nitrogen_scan_nd
    parameters:
    - default: '1.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: multiple
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '7.93'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''full_nitrogen_scan_nd'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  full_oxygen_scan_nd:
    description: 'full_oxygen_scan_nd

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: full_oxygen_scan_nd
    parameters:
    - default: '1.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: multiple
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '7.98'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''full_oxygen_scan_nd'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  g_carbon_scan_nd:
    description: 'g_carbon_scan_nd

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: g_carbon_scan_nd
    parameters:
    - default: '1.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: multiple
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '8.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''g_carbon_scan_nd'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  grating_to_1200:
    module: rsoxs.HW.energy
    name: grating_to_1200
    parameters:
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: hopgx
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: hopgy
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: hopgtheta
    properties:
      is_generator: true
  grating_to_250:
    module: rsoxs.HW.energy
    name: grating_to_250
    parameters:
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: hopgx
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: hopgy
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: hopgtheta
    properties:
      is_generator: true
  image_bar:
    module: rsoxs.Functions.alignment
    name: image_bar
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: bar
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: path
    - default: 'True'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: front
    properties:
      is_generator: true
  isvar_scan:
    module: rsoxs.Functions.common_procedures
    name: isvar_scan
    parameters: []
    properties:
      is_generator: true
  load_configuration:
    description: ':param config: string containing a name of a configuration

      :return:'
    module: rsoxs.Functions.alignment
    name: load_configuration
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: config
    properties:
      is_generator: true
  load_sample:
    description: move to a sample location and load the metadata with the sample information
    module: rsoxs.Functions.alignment
    name: load_sample
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: sam_dict
    properties:
      is_generator: true
  mirror1_NEXAFSpos:
    module: rsoxs.Functions.configurations
    name: mirror1_NEXAFSpos
    parameters: []
    properties:
      is_generator: true
  mirror3_NEXAFSpos:
    module: rsoxs.Functions.configurations
    name: mirror3_NEXAFSpos
    parameters: []
    properties:
      is_generator: true
  mirror_pos_NEXAFS:
    module: rsoxs.Functions.configurations
    name: mirror_pos_NEXAFS
    parameters: []
    properties:
      is_generator: true
  mirror_pos_rsoxs:
    module: rsoxs.Functions.configurations
    name: mirror_pos_rsoxs
    parameters: []
    properties:
      is_generator: true
  move_to_location:
    module: rsoxs.Functions.alignment
    name: move_to_location
    parameters:
    - default: '[{''motor'': ''x'', ''position'': 0.0, ''order'': 0}, {''motor'':
        ''y'', ''position'': 344.9985, ''order'': 0}, {''motor'': ''z'', ''position'':
        0.0, ''order'': 0}, {''motor'': ''th'', ''position'': 2.842170943040401e-14,
        ''order'': 0}]'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: locs
    properties:
      is_generator: true
  normal_incidence_rotate_pol_nexafs:
    description: At normal incidence, rotate the polarization of the X-ray beam and
      conduct a NEXAFS scan at each polarization
    module: rsoxs.Functions.NEXAFSscans
    name: normal_incidence_rotate_pol_nexafs
    parameters:
    - default: '''fly_Carbon_NEXAFS'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: nexafs_plan
    - default: '[0, 20, 45, 70, 90]'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: polarizations
    - default: '''normal_incidence_rotate_pol_nexafs'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''normal_incidence_rotate_pol_nexafs'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  one_shuttered_step:
    description: Inner loop of an N-dimensional step scan
    module: rsoxs.Functions.energyscancore
    name: one_shuttered_step
    parameters:
    - description: devices to read
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - description: mapping motors to positions in this step
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: step
    - description: mapping motors to their last-set positions
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: pos_cache
    properties:
      is_generator: true
  one_trigger_nd_step:
    description: Inner loop of an N-dimensional step scan
    module: rsoxs.Functions.energyscancore
    name: one_trigger_nd_step
    parameters:
    - description: devices to read
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - description: mapping motors to positions in this step
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: step
    - description: mapping motors to their last-set positions
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: pos_cache
    properties:
      is_generator: true
  picky_carbon_scan_nd:
    description: 'picky_carbon_scan_nd

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: picky_carbon_scan_nd
    parameters:
    - default: '1.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: multiple
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '8.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''picky_carbon_scan_nd'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  rd:
    description: "Reads a single-value non-triggered object\nThis is a helper plan\
      \ to get the scalar value out of a Device\n(such as an EpicsMotor or a single\
      \ EpicsSignal).\nFor devices that have more than one read key the following\
      \ rules are used:\n- if exactly 1 field is hinted that value is used\n- if no\
      \ fields are hinted and there is exactly 1 value in the\n  reading that value\
      \ is used\n- if more than one field is hinted an Exception is raised\n- if no\
      \ fields are hinted and there is more than one key in the reading an\n  Exception\
      \ is raised\nThe devices is not triggered and this plan does not create any\
      \ Events\nParameters\n----------\nobj : Device\n    The device to be read\n\
      default_value : Any\n    The value to return when not running in a \"live\"\
      \ RunEngine.\n    This come ups when ::\n       ret = yield Msg('read', obj)\n\
      \       assert ret is None\n    the plan is passed to `list` or some other iterator\
      \ that\n    repeatedly sends `None` into the plan to advance the\n    generator.\n\
      Returns\n-------\nval : Any or None\n    The \"single\" value of the device"
    module: rsoxs.Functions.energyscancore
    name: rd
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: obj
    - default: '0'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: default_value
    properties:
      is_generator: true
  read:
    description: Take a reading and add it to the current bundle of readings.
    module: bluesky.plan_stubs
    name: read
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: obj
    properties:
      is_generator: true
  rewindable_wrapper:
    description: Toggle the 'rewindable' state of the RE
    module: bluesky.preprocessors
    name: rewindable_wrapper
    parameters:
    - description: The plan to wrap in a 'rewindable' or 'not rewindable' context
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: plan
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: rewindable
    properties:
      is_generator: true
  rotate_now:
    module: rsoxs.Functions.alignment
    name: rotate_now
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: theta
    - default: 'False'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: force
    properties:
      is_generator: true
  run_acquisition:
    module: rsoxs.Functions.acquisitions
    name: run_acquisition
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: acq
    properties:
      is_generator: true
  run_bar:
    description: "run all sample dictionaries stored in the list bar\n@param bar:\
      \ a list of sample dictionaries\n@param sort_by: list of strings determining\
      \ the sorting of scans\n                strings include project, configuration,\
      \ sample_id, plan, plan_args, spriority, apriority\n                within which\
      \ all of one acquisition, etc\n@param dryrun: Print out the list of plans instead\
      \ of actually doing anything - safe to do during setup\n@param rev: list the\
      \ same length of sort_by, or booleans, wetierh to reverse that sort\n@param\
      \ delete_as_complete: remove the acquisitions from the bar as we go, so we can\
      \ automatically start back up\n@param retract_when_done: go to throughstation\
      \ mode at the end of all runs.\n@param save_as_complete: if a valid path, will\
      \ save the running bar to this position in case of failure\n@return:"
    module: rsoxs.Functions.acquisitions
    name: run_bar
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: bar
    - default: '[''sample_num'']'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: sort_by
    - default: '0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: dryrun
    - default: '[False]'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: rev
    - default: 'True'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: delete_as_complete
    - default: 'False'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: retract_when_done
    - default: ''''''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: save_as_complete
    properties:
      is_generator: true
  run_queue_plan:
    module: rsoxs.Functions.acquisitions
    name: run_queue_plan
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: acquisition_plan_name
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: configuration
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: sample_md
    - default: 'False'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: simulation
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  run_sample:
    module: rsoxs.Functions.acquisitions
    name: run_sample
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: sam_dict
    properties:
      is_generator: true
  samxscan:
    module: rsoxs.Functions.alignment
    name: samxscan
    parameters: []
    properties:
      is_generator: true
  save:
    description: Close a bundle of readings and emit a completed Event document.
    module: bluesky.plan_stubs
    name: save
    parameters: []
    properties:
      is_generator: true
  scan_eliot:
    description: "Scan over an arbitrary N-dimensional trajectory.\n1.) begin movement\
      \ as soon as photon part of detection ends\n        wait for shutter to close,\
      \ not for detector readout\n2.) do not wait for motor movement to finish before\
      \ beginnning detection step"
    module: rsoxs.Functions.energyscancore
    name: scan_eliot
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - description: list of dictionaries mapping motors to positions
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: cycler
    - default: None
      description: 'this signals the end of photons, not the end of the detector trigger

        it is safe to move to the next step once this signal is 0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: shutter_sig
    - default: '{}'
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  set_polarization:
    module: rsoxs.HW.energy
    name: set_polarization
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: pol
    properties:
      is_generator: true
  set_slit_offsets:
    module: rsoxs.HW.slits
    name: set_slit_offsets
    parameters: []
    properties:
      is_generator: true
  short_aluminum_scan_nd:
    description: 'short_aluminum_scan_nd

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: short_aluminum_scan_nd
    parameters:
    - default: '1.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: multiple
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '7.96'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''short_aluminum_scan_nd'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  short_calcium_scan_nd:
    description: 'short_calcium_scan_nd

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: short_calcium_scan_nd
    parameters:
    - default: '1.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: multiple
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '8.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''short_calcium_scan_nd'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  short_carbon_scan_nd:
    description: 'short_carbon_scan_nd

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: short_carbon_scan_nd
    parameters:
    - default: '1.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: multiple
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '8.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''short_carbon_scan_nd'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  short_carbon_scan_nonaromatic:
    description: 'short_carbon_scan_nonaromatic

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: short_carbon_scan_nonaromatic
    parameters:
    - default: '1.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: multiple
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '8.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''short_carbon_scan_nonaromatic'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  short_fluorine_scan_nd:
    description: 'short_fluorine_scan_nd

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: short_fluorine_scan_nd
    parameters:
    - default: '1.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: multiple
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '7.98'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''short_fluorine_scan_nd'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  short_nitrogen_scan_nd:
    description: 'short_nitrogen_scan_nd

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: short_nitrogen_scan_nd
    parameters:
    - default: '1.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: multiple
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '8.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''short_nitrogen_scan_nd'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  short_oxygen_scan_nd:
    description: 'short_oxygen_scan_nd

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: short_oxygen_scan_nd
    parameters:
    - default: '1.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: multiple
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '7.98'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''short_oxygen_scan_nd'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  short_sulfurl_scan_nd:
    description: 'short_sulfurl_scan_nd

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: short_sulfurl_scan_nd
    parameters:
    - default: '1.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: multiple
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '8.02'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''short_sulfurl_scan_nd'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  short_zincl_scan_nd:
    description: 'short_zincl_scan_nd

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: short_zincl_scan_nd
    parameters:
    - default: '1.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: multiple
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '7.96'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''short_zincl_scan_nd'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  sleep:
    description: Tell the RunEngine to sleep, while asynchronously doing other processing.
    module: bluesky.plan_stubs
    name: sleep
    parameters:
    - description: seconds
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: time
    properties:
      is_generator: true
  slits_in_SAXS:
    module: rsoxs.Functions.configurations
    name: slits_in_SAXS
    parameters: []
    properties:
      is_generator: true
  slits_in_WAXS:
    module: rsoxs.Functions.configurations
    name: slits_in_WAXS
    parameters: []
    properties:
      is_generator: true
  slits_out:
    module: rsoxs.Functions.configurations
    name: slits_out
    parameters: []
    properties:
      is_generator: true
  snapshot:
    description: 'snap of detectors to clear any charge from light hitting them -
      needed before starting scans or snapping images

      :return:'
    module: rsoxs.HW.detectors
    name: snapshot
    parameters:
    - default: '0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: secs
    - default: '1'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: count
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: name
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: energy
    - default: '''saxs'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detn
    properties:
      is_generator: true
  spiraldata:
    module: rsoxs.Functions.alignment
    name: spiraldata
    parameters:
    - default: '0.6'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diameter
    - default: '0.2'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: stepsize
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: energy
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: exp_time
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    properties:
      is_generator: true
  spiralsearch:
    module: rsoxs.Functions.alignment
    name: spiralsearch
    parameters:
    - default: '0.6'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diameter
    - default: '0.2'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: stepsize
    - default: '270'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: energy
    - default: '0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: pol
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: angle
    - default: '1'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: exposure
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '[]'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: dets
    - default: 'False'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: sim_mode
    properties:
      is_generator: true
  spiralsearch_all:
    module: rsoxs.Functions.alignment
    name: spiralsearch_all
    parameters:
    - default: '[]'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: barin
    - default: '0.5'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diameter
    - default: '0.2'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: stepsize
    properties:
      is_generator: true
  spiralsearchwaxs:
    module: rsoxs.Functions.alignment
    name: spiralsearchwaxs
    parameters:
    - default: '0.6'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diameter
    - default: '0.2'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: stepsize
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: energy
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    properties:
      is_generator: true
  spiralsearchwaxs_all:
    module: rsoxs.Functions.alignment
    name: spiralsearchwaxs_all
    parameters:
    - default: '[]'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: barin
    - default: '0.5'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diameter
    - default: '0.2'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: stepsize
    properties:
      is_generator: true
  stability_scans:
    module: rsoxs.Functions.common_procedures
    name: stability_scans
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: num
    properties:
      is_generator: true
  subs_wrapper:
    description: Subscribe callbacks to the document stream; finally, unsubscribe.
    module: bluesky.preprocessors
    name: subs_wrapper
    parameters:
    - description: a generator, list, or similar containing `Msg` objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: plan
    - description: "Documents of each type are routed to a list of functions.\nInput\
        \ is normalized to a dict of lists of functions, like so:\n\nNone -> {'all':\
        \ [], 'start': [], 'stop': [], 'event': [],\n         'descriptor': []}\n\n\
        func -> {'all': [func], 'start': [], 'stop': [], 'event': [],\n         'descriptor':\
        \ []}\n\n[f1, f2] -> {'all': [f1, f2], 'start': [], 'stop': [], 'event': [],\n\
        \             'descriptor': []}\n\n{'event': [func]} ->  {'all': [], 'start':\
        \ [], 'stop': [],\n                       'event': [func], 'descriptor': []}\n\
        \nSignature of functions must conform to `f(name, doc)` where\nname is one\
        \ of {'all', 'start', 'stop', 'event', 'descriptor'} and\ndoc is a dictionary."
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: subs
    properties:
      is_generator: true
  sufficient_carbon_scan_nd:
    description: 'sufficient_carbon_scan_nd

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: sufficient_carbon_scan_nd
    parameters:
    - default: '1.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: multiple
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '8.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''sufficient_carbon_scan_nd'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  survey_scan_highenergy:
    description: 'survey_scan_highenergy

      @param master_plan: higher level plan for timing purposes

      @param md: any metadata to push through to acquisition

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: survey_scan_highenergy
    parameters:
    - default: '1.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: multiple
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '7.89'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''survey_scan_highenergy'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  survey_scan_lowenergy:
    description: 'survey_scan_lowenergy

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: survey_scan_lowenergy
    parameters:
    - default: '1.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: multiple
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '7.91'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''survey_scan_lowenergy'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  survey_scan_veryhighenergy:
    description: 'survey_scan_veryhighenergy

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: survey_scan_veryhighenergy
    parameters:
    - default: '1.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: multiple
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '7.89'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''survey_scan_veryhighenergy'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  survey_scan_verylowenergy:
    description: 'survey_scan_verylowenergy

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: survey_scan_verylowenergy
    parameters:
    - default: '1.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: multiple
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '7.93'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''250'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''survey_scan_verylowenergy'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  t_carbon_scan_nd:
    description: 't_carbon_scan_nd

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: t_carbon_scan_nd
    parameters:
    - default: '1.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: multiple
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '8.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''t_carbon_scan_nd'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  trigger:
    description: Trigger and acquisition. Optionally, wait for it to complete.
    module: bluesky.plan_stubs
    name: trigger
    parameters:
    - kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: obj
    - default: None
      description: identifier used by 'wait'; None by default
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: group
    - default: 'False'
      description: 'If True, wait for completion before processing any more messages.

        False by default.'
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: wait
    properties:
      is_generator: true
  trigger_and_read:
    description: Trigger and read a list of detectors and bundle readings into one
      Event.
    module: bluesky.plan_stubs
    name: trigger_and_read
    parameters:
    - description: devices to trigger (if they have a trigger method) and then read
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: devices
    - default: '''primary'''
      description: 'event stream name, a convenient human-friendly identifier; default

        name is ''primary'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: name
    properties:
      is_generator: true
  tune_max:
    description: 'plan: tune a motor to the maximum of signal(motor)'
    module: rsoxs.Functions.common_procedures
    name: tune_max
    parameters:
    - description: list of 'readable' objects
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: detectors
    - description: 'detector fields whose output is to maximize

        (the first will be the primary, but secondardy maxes will be recorded)'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: signals
    - description: any 'settable' object (motor, temp controller, etc.)
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: motor
    - description: start of range
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: start
    - description: 'end of range, note: start < stop'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: stop
    - description: smallest step size to use.
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: min_step
    - default: '10'
      description: number of points with each traversal, default = 10
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: num
    - default: '3.0'
      description: 'used in calculating new range after each pass


        note: step_factor > 1.0, default = 3'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: step_factor
    - default: 'False'
      description: if False (default), always scan from start to stop
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: snake
    - default: '[]'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: peaklist
    - default: None
      description: metadata
      kind:
        name: KEYWORD_ONLY
        value: 3
      name: md
    properties:
      is_generator: true
  vent:
    module: rsoxs.Functions.common_procedures
    name: vent
    parameters: []
    properties:
      is_generator: true
  very_short_carbon_scan_nd:
    description: 'very_short_carbon_scan_nd

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: very_short_carbon_scan_nd
    parameters:
    - default: '1.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: multiple
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '8.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''very_short_carbon_scan_nd'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  very_short_oxygen_scan_nd:
    description: 'very_short_oxygen_scan_nd

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: very_short_oxygen_scan_nd
    parameters:
    - default: '1.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: multiple
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '7.98'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''very_short_oxygen_scan_nd'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  veryshort_fluorine_scan_nd:
    description: 'veryshort_fluorine_scan_nd

      @param master_plan: a category of higher level plan which you might want to
      sort by

      @param enscan_type: the granular level plan you might want to sort by - generally
      for timing or data lookup

      @param md: metadata to push through to lower level plans and eventually a bluesky
      document

      @param multiple: default exposure times is multipled by this

      @param diode_range: integer range for the dilde

      @param m3_pitch: pitch value for M3 for this energy range - check before scans

      @param grating: ''1200'' high energy or ''250'' low energy

      @param kwargs: all extra parameters for general scans - see the inputs for en_scan_core

      @return: Do a step scan and take images'
    module: rsoxs.Functions.energyscans
    name: veryshort_fluorine_scan_nd
    parameters:
    - default: '1.0'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: multiple
    - default: '8'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: diode_range
    - default: '7.99'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: m3_pitch
    - default: '''1200'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: grating
    - default: None
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: master_plan
    - default: '{}'
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: md
    - default: '''veryshort_fluorine_scan_nd'''
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: enscan_type
    - kind:
        name: VAR_KEYWORD
        value: 4
      name: kwargs
    properties:
      is_generator: true
  wait:
    description: Wait for all statuses in a group to report being finished.
    module: bluesky.plan_stubs
    name: wait
    parameters:
    - default: None
      description: idenified given to `abs_set`, `rel_set`, `trigger`; None by default
      kind:
        name: POSITIONAL_OR_KEYWORD
        value: 1
      name: group
    properties:
      is_generator: true
